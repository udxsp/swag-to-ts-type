{
    "swagger": "2.0",
    "info": {
        "description": "Api used by frontend application",
        "version": "1.0",
        "title": "EasyPay Backend",
        "termsOfService": "Terms of service",
        "contact": { "name": "Referente", "email": "giuseppe.parello@alpitourworld.it" },
        "license": { "name": "License of API", "url": "API license URL" }
    },
    "host": "localhost:8080",
    "basePath": "/",
    "tags": [
        { "name": "channel-controller", "description": "Channel Controller" },
        { "name": "desk-controller", "description": "Desk Controller" },
        { "name": "email-controller", "description": "Email Controller" },
        { "name": "fixture-controller", "description": "Fixture Controller" },
        { "name": "parent-child-link-controller", "description": "Parent Child Link Controller" },
        { "name": "pay-link-controller", "description": "Pay Link Controller" },
        { "name": "payment-controller", "description": "Payment Controller" },
        { "name": "qr-controller", "description": "Qr Controller" },
        { "name": "session-controller", "description": "Session Controller" }
    ],
    "paths": {
        "/channel/rules": {
            "post": {
                "tags": ["channel-controller"],
                "summary": "Get all rules",
                "operationId": "regoleUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "regoleRequest",
                        "description": "regoleRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/RegoleRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": { "$ref": "#/definitions/RegolaPagamentoDTO" }
                        }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/desk/get-user/{id}": {
            "get": {
                "tags": ["desk-controller"],
                "summary": "get desk user info in easypay DB",
                "operationId": "getUserByEmailUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/UserDesk" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/desk/save-user": {
            "post": {
                "tags": ["desk-controller"],
                "summary": "save desk user info in easypay DB",
                "operationId": "saveUserUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": { "$ref": "#/definitions/UserDesk" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "boolean" } },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/payment/directverify": {
            "post": {
                "tags": ["payment-controller"],
                "summary": "directverify",
                "operationId": "directverifyUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "paymentVerifyRequest",
                        "description": "paymentVerifyRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/PaymentVerifyRequest" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/Session" } },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/payment/init-easypay": {
            "post": {
                "tags": ["payment-controller"],
                "summary": "Init a new payment session with the gateway",
                "operationId": "initUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "paymentInitRequest",
                        "description": "paymentInitRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/PaymentInitRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/PaymentInitResponse" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/payment/verify-easypay": {
            "post": {
                "tags": ["payment-controller"],
                "summary": "Verify the status of a payment",
                "operationId": "verifyUsingPOST_2",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "notification",
                        "in": "query",
                        "description": "notification",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "orderUpdate",
                        "in": "query",
                        "description": "orderUpdate",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "in": "body",
                        "name": "paymentVerifyRequest",
                        "description": "paymentVerifyRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/PaymentVerifyRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/PaymentVerifyFeResponse" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/session/": {
            "get": {
                "tags": ["session-controller"],
                "summary": "index",
                "operationId": "indexUsingGET_1",
                "produces": ["*/*"],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "string" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/session/cancel-payment/{id}": {
            "get": {
                "tags": ["session-controller"],
                "summary": "set cancel field in a session to true e return a SessionDTO",
                "operationId": "makeVoidUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/SessionDTO" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/session/get/{id}": {
            "get": {
                "tags": ["session-controller"],
                "summary": "get",
                "operationId": "getUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/SessionDTO" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/session/init": {
            "post": {
                "tags": ["session-controller"],
                "summary": "Create a new session",
                "operationId": "initUsingPOST_2",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "sessionInitRequest",
                        "description": "sessionInitRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SessionInitRequest" }
                    },
                    {
                        "name": "tpax",
                        "in": "query",
                        "description": "tpax",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "verbose",
                        "in": "query",
                        "description": "verbose",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/SessionInitResponse" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/easypay/session/verify": {
            "post": {
                "tags": ["session-controller"],
                "summary": "Verify a session from JWT. It return all config for build the FrontEnd",
                "operationId": "verifyUsingPOST_3",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "sessionVerifyRequest",
                        "description": "sessionVerifyRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SessionVerifyRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/SessionVerifyResponse" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/": {
            "get": {
                "tags": ["fixture-controller"],
                "summary": "index",
                "operationId": "indexUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "string" } },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/create-channel": {
            "post": {
                "tags": ["fixture-controller"],
                "summary": "Create a new channel",
                "operationId": "createChannelUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SingleChannelRequestDto" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/CanalePagamento" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/get-all-fixture": {
            "get": {
                "tags": ["fixture-controller"],
                "summary": "Return all the fixture in Elastic",
                "operationId": "getAllFixtureUsingGET",
                "produces": ["*/*"],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/FixtureRequestDto" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/get-channels/{id}": {
            "get": {
                "tags": ["fixture-controller"],
                "summary": "Return channel by Id",
                "operationId": "getChannelUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/CanalePagamento" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/init": {
            "post": {
                "tags": ["fixture-controller"],
                "summary": "init",
                "operationId": "initUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/FixtureRequestDto" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "string" } },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/fixture/update-channel/{id}": {
            "post": {
                "tags": ["fixture-controller"],
                "summary": "Update Channel by Id",
                "operationId": "updateChannelUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SingleChannelRequestDto" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/CanalePagamento" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/paylink/otp": {
            "post": {
                "tags": ["pay-link-controller"],
                "summary": "verify",
                "operationId": "verifyUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": { "$ref": "#/definitions/VerifyOtpRequestDto" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/SessionInitResponse" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/paylink/restore": {
            "post": {
                "tags": ["pay-link-controller"],
                "summary": "restore",
                "operationId": "restoreUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": { "$ref": "#/definitions/LinkCheckRequestDto" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/LinkCheckResponseDto" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/paylink/verify": {
            "post": {
                "tags": ["pay-link-controller"],
                "summary": "verify",
                "operationId": "verifyUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "requestDto",
                        "description": "requestDto",
                        "required": true,
                        "schema": { "$ref": "#/definitions/LinkCheckRequestDto" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/LinkCheckResponseDto" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/pclink/check-child-session": {
            "post": {
                "tags": ["parent-child-link-controller"],
                "summary": " Polling - Check status of child session ",
                "operationId": "checkSessionUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/QrCheckSessionRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/PCLinkCheckSessionResponseDTO" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/pclink/session-init-by/{jwt}": {
            "get": {
                "tags": ["parent-child-link-controller"],
                "summary": "Create a new (child) session based on another (parent) jwt, with different flux",
                "operationId": "sessionInitByJwtUsingGET",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "jwt",
                        "in": "path",
                        "description": "jwt",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/PCLinkNewSessionResponse" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/qr/check-child-session": {
            "post": {
                "tags": ["qr-controller"],
                "summary": " Polling - Check status of child session ",
                "operationId": "checkSessionUsingPOST_1",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/QrCheckSessionRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/QRCheckSessionResponseDTO" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/qr/generate-qr": {
            "post": {
                "tags": ["qr-controller"],
                "summary": "Get a string URL and return the qrCode in PNG format",
                "operationId": "generateQRCodeUsingPOST",
                "consumes": ["application/json"],
                "produces": ["image/png"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "childUrl",
                        "description": "childUrl",
                        "required": true,
                        "schema": { "$ref": "#/definitions/QRImageRequest" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "type": "string", "format": "byte" }
                    },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/qr/send-url-by-email": {
            "post": {
                "tags": ["qr-controller"],
                "summary": "Send the QRCode url by email",
                "operationId": "sendQrCodeUrlUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "description": "request",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SendQrCodeUrlRequest" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "boolean" } },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/qr/session-init-by/{jwt}": {
            "get": {
                "tags": ["qr-controller"],
                "summary": "Create a new (child) session based on another (parent) jwt, with different flux",
                "operationId": "sessionInitByJwtUsingGET_1",
                "produces": ["*/*"],
                "parameters": [
                    {
                        "name": "jwt",
                        "in": "path",
                        "description": "jwt",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/QrNewSessionResponse" }
                    },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        },
        "/send-email": {
            "post": {
                "tags": ["email-controller"],
                "summary": "Send an email to the customer with a paymentLink (parentChild case)",
                "operationId": "sendEmailUsingPOST",
                "consumes": ["application/json"],
                "produces": ["*/*"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "emailRequest",
                        "description": "emailRequest",
                        "required": true,
                        "schema": { "$ref": "#/definitions/EmailRequest" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "type": "string" } },
                    "201": { "description": "Created" },
                    "401": { "description": "Unauthorized" },
                    "403": { "description": "Forbidden" },
                    "404": { "description": "Not Found" }
                }
            }
        }
    },
    "definitions": {
        "CanaleInfo": {
            "type": "object",
            "properties": {
                "address": { "type": "string" },
                "callCenterDescription": { "type": "string" },
                "callCenterNumberPhone": { "type": "string" },
                "capitaleSociale": { "type": "string" },
                "companyName": { "type": "string" },
                "fiscalCode": { "type": "string" },
                "pIva": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "privacyPolicyLink": { "type": "string" },
                "selectedCookiesLink": { "type": "string" }
            },
            "title": "CanaleInfo"
        },
        "CanaleInfoDTO": {
            "type": "object",
            "properties": {
                "address": { "type": "string" },
                "callCenterDescription": { "type": "string" },
                "callCenterNumberPhone": { "type": "string" },
                "capitaleSociale": { "type": "string" },
                "companyName": { "type": "string" },
                "fiscalCode": { "type": "string" },
                "pIva": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "privacyPolicyLink": { "type": "string" },
                "selectedCookiesLink": { "type": "string" }
            },
            "title": "CanaleInfoDTO"
        },
        "CanalePagamento": {
            "type": "object",
            "properties": {
                "backOfficeEmailAddresses": { "type": "array", "items": { "type": "string" } },
                "brandDark": { "type": "boolean" },
                "channelInfo": { "$ref": "#/definitions/CanaleInfo" },
                "channelLegalInfo": { "$ref": "#/definitions/ChannelLegalInfo" },
                "channelStyle": { "$ref": "#/definitions/ChannelStyle" },
                "cod": { "type": "string" },
                "colourCode": { "type": "string" },
                "customStyleActive": { "type": "boolean" },
                "desc": { "type": "string" },
                "imgPath": { "type": "string" },
                "notificationReceivers": {
                    "type": "array",
                    "items": { "type": "string", "enum": ["BACKOFFICE", "CLIENTE", "INTERNAL"] }
                },
                "orderUpdate": { "$ref": "#/definitions/OrderUpdate" },
                "paymentMethodLimits": { "$ref": "#/definitions/PaymentMethodLimits" },
                "paymentNotification": { "type": "boolean" },
                "privacyPolicyLink": { "type": "string" },
                "regolePagamento": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/RegolaPagamento" }
                },
                "selectedCookiesLink": { "type": "string" },
                "valid": { "type": "boolean" }
            },
            "title": "CanalePagamento"
        },
        "ChannelLegalInfo": {
            "type": "object",
            "properties": { "termsAndConditionsUrl": { "type": "string" } },
            "title": "ChannelLegalInfo"
        },
        "ChannelStyle": {
            "type": "object",
            "properties": {
                "button": { "$ref": "#/definitions/ChannelStyleSection" },
                "footer": { "$ref": "#/definitions/ChannelStyleSection" },
                "header": { "$ref": "#/definitions/ChannelStyleSection" }
            },
            "title": "ChannelStyle"
        },
        "ChannelStyleSection": {
            "type": "object",
            "properties": {
                "backgroundColor": { "type": "string" },
                "textColor": { "type": "string" },
                "textStyle": { "type": "string" }
            },
            "title": "ChannelStyleSection"
        },
        "CustomPreferences": {
            "type": "object",
            "properties": {
                "acceptedTermsAndConditions": { "type": "boolean" },
                "blockRedirect": { "type": "boolean" },
                "dateAcceptedTermsAndConditions": { "type": "string" },
                "defaultLanguage": { "type": "string" },
                "thankYouBehavior": { "type": "string", "enum": ["BLOCK", "CONTINUE"] }
            },
            "title": "CustomPreferences"
        },
        "CustomPreferencesDTO": {
            "type": "object",
            "properties": {
                "acceptedTermsAndConditions": { "type": "boolean" },
                "blockRedirect": { "type": "boolean" },
                "defaultLanguage": { "type": "string" },
                "thankYouBehavior": { "type": "string", "enum": ["BLOCK", "CONTINUE"] }
            },
            "title": "CustomPreferencesDTO"
        },
        "EmailRequest": {
            "type": "object",
            "properties": {
                "jwt": { "type": "string" },
                "subject": { "type": "string" },
                "text": { "type": "string" },
                "to": { "type": "string" }
            },
            "title": "EmailRequest"
        },
        "FixtureRequestDto": {
            "type": "object",
            "required": ["canaliPagamento", "metodiPagamento"],
            "properties": {
                "canaliPagamento": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/CanalePagamento" }
                },
                "jwt": { "type": "string" },
                "metodiPagamento": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/MetodoPagamento" }
                }
            },
            "title": "FixtureRequestDto"
        },
        "InfoDTO": {
            "type": "object",
            "properties": {
                "info1": { "type": "string" },
                "info2": { "type": "string" },
                "info3": { "type": "string" },
                "info4": { "type": "string" },
                "info5": { "type": "string" }
            },
            "title": "InfoDTO"
        },
        "LinkCheckRequestDto": {
            "type": "object",
            "properties": { "refData": { "type": "string" } },
            "title": "LinkCheckRequestDto"
        },
        "LinkCheckResponseDto": {
            "type": "object",
            "properties": {
                "cellMask": { "type": "string" },
                "mailMask": { "type": "string" },
                "msg": { "type": "string" },
                "refData": { "type": "string" },
                "status": { "type": "string" },
                "urlDescrER": { "type": "string" }
            },
            "title": "LinkCheckResponseDto"
        },
        "MetodoPagamento": {
            "type": "object",
            "properties": {
                "descrizione": { "type": "string" },
                "gateway": { "type": "string" },
                "iconPath": { "type": "string" },
                "id": { "type": "string" },
                "key_SIGNATURE_TERMINALE_PAYMENT_GATEWAY": { "type": "string" },
                "nome": { "type": "string" },
                "terminale_PAYMENT_GATEWAY": { "type": "string" },
                "valid": { "type": "boolean" }
            },
            "title": "MetodoPagamento"
        },
        "MetodoPagamentoDTO": {
            "type": "object",
            "properties": {
                "descrizione": { "type": "string" },
                "gateway": { "type": "string" },
                "iconPath": { "type": "string" },
                "id": { "type": "string" },
                "key_SIGNATURE_TERMINALE_PAYMENT_GATEWAY": { "type": "string" },
                "nome": { "type": "string" },
                "terminale_PAYMENT_GATEWAY": { "type": "string" }
            },
            "title": "MetodoPagamentoDTO"
        },
        "OrderUpdate": {
            "type": "object",
            "properties": {
                "insertKIRIBOK": { "type": "boolean" },
                "insertTW37": { "type": "boolean" },
                "updateBTK": { "type": "boolean" }
            },
            "title": "OrderUpdate"
        },
        "PCLinkCheckSessionResponseDTO": {
            "type": "object",
            "properties": {
                "canceled": { "type": "boolean" },
                "error": { "type": "string" },
                "esito": { "type": "string" },
                "gatewayInitialized": { "type": "boolean" },
                "igfsCode": { "type": "string" },
                "initialized": { "type": "boolean" },
                "loading": { "type": "boolean" },
                "pagamentoSelezionato": { "type": "string" },
                "paymentId": { "type": "string" },
                "started": { "type": "boolean" },
                "statoTransazione": { "type": "string" },
                "terminated": { "type": "boolean" },
                "transactionId": { "type": "string" }
            },
            "title": "PCLinkCheckSessionResponseDTO"
        },
        "PCLinkNewSessionResponse": {
            "type": "object",
            "properties": { "childToken": { "type": "string" }, "childUrl": { "type": "string" } },
            "title": "PCLinkNewSessionResponse"
        },
        "Passenger": {
            "type": "object",
            "properties": {
                "city": { "type": "string" },
                "countryCode": { "type": "string" },
                "name": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "postCode": { "type": "string" },
                "street": { "type": "string" },
                "surname": { "type": "string" }
            },
            "title": "Passenger"
        },
        "PaymentInitRequest": {
            "type": "object",
            "required": ["jwt", "method", "paymentRule"],
            "properties": {
                "dateAcceptedTermsAndConditions": { "type": "string" },
                "jwt": { "type": "string" },
                "method": { "type": "string" },
                "paymentRule": { "type": "string" }
            },
            "title": "PaymentInitRequest"
        },
        "PaymentInitResponse": {
            "type": "object",
            "properties": {
                "gatewayRedirectUrl": { "type": "string" },
                "message": { "type": "string" },
                "paymentId": { "type": "string" },
                "statusCode": { "type": "string" },
                "transactionId": { "type": "string" }
            },
            "title": "PaymentInitResponse"
        },
        "PaymentMethodLimits": {
            "type": "object",
            "properties": {
                "maxAmount": { "type": "integer", "format": "int64" },
                "methodId": { "type": "string" }
            },
            "title": "PaymentMethodLimits"
        },
        "PaymentRequest": {
            "type": "object",
            "required": [
                "agencyCode",
                "agencyName",
                "amount",
                "email",
                "nomeGruppo",
                "orderNumber"
            ],
            "properties": {
                "agencyCode": { "type": "string" },
                "agencyName": { "type": "string" },
                "amount": { "type": "number", "format": "double" },
                "aziendaPratica": { "type": "string" },
                "email": { "type": "string" },
                "nomeGruppo": { "type": "string" },
                "orderNumber": { "type": "string" },
                "paymentMode": { "type": "string", "enum": ["ACCONTO", "SALDO"] },
                "phoneNumber": { "type": "string" },
                "specialEvent": { "type": "string" },
                "timestamp": { "type": "string" }
            },
            "title": "PaymentRequest"
        },
        "PaymentRequestDTO": {
            "type": "object",
            "properties": {
                "agencyCode": { "type": "string" },
                "agencyName": { "type": "string" },
                "amount": { "type": "integer", "format": "int64" },
                "aziendaPratica": { "type": "string" },
                "email": { "type": "string" },
                "nomeGruppo": { "type": "string" },
                "orderNumber": { "type": "string" },
                "paymentMode": { "type": "string", "enum": ["ACCONTO", "SALDO"] },
                "phoneNumber": { "type": "string" },
                "specialEvent": { "type": "string" },
                "timestamp": { "type": "string" }
            },
            "title": "PaymentRequestDTO"
        },
        "PaymentResult": {
            "type": "object",
            "properties": { "code": { "type": "string" }, "description": { "type": "string" } },
            "title": "PaymentResult"
        },
        "PaymentResultDTO": {
            "type": "object",
            "properties": { "code": { "type": "string" }, "description": { "type": "string" } },
            "title": "PaymentResultDTO"
        },
        "PaymentVerifyFeResponse": {
            "type": "object",
            "properties": {
                "authCode": { "type": "string" },
                "channel": { "type": "string" },
                "channelColor": { "type": "string" },
                "channelImg": { "type": "string" },
                "channelName": { "type": "string" },
                "code": { "type": "string" },
                "externalRule": { "type": "boolean" },
                "gatewayRedirectUrl": { "type": "string" },
                "importo": { "type": "string" },
                "importoPagato": { "type": "string" },
                "message": { "type": "string" },
                "pagamentoSelezionato": { "type": "string" },
                "paymentId": { "type": "string" },
                "status": {
                    "type": "string",
                    "enum": ["ABANDONED", "ABANDONED_EASYPAY", "ERROR", "OK", "PENDING"]
                },
                "statusCode": { "type": "string" },
                "terminatedTimestamp": { "type": "string", "format": "date-time" },
                "transactionId": { "type": "string" }
            },
            "title": "PaymentVerifyFeResponse"
        },
        "PaymentVerifyRequest": {
            "type": "object",
            "required": ["jwt"],
            "properties": { "jwt": { "type": "string" } },
            "title": "PaymentVerifyRequest"
        },
        "QRCheckSessionResponseDTO": {
            "type": "object",
            "properties": {
                "canceled": { "type": "boolean" },
                "error": { "type": "string" },
                "esito": { "type": "string" },
                "gatewayInitialized": { "type": "boolean" },
                "igfsCode": { "type": "string" },
                "initialized": { "type": "boolean" },
                "loading": { "type": "boolean" },
                "pagamentoSelezionato": { "type": "string" },
                "paymentId": { "type": "string" },
                "started": { "type": "boolean" },
                "statoTransazione": { "type": "string" },
                "terminated": { "type": "boolean" },
                "transactionId": { "type": "string" }
            },
            "title": "QRCheckSessionResponseDTO"
        },
        "QRImageRequest": {
            "type": "object",
            "properties": { "url": { "type": "string" } },
            "title": "QRImageRequest"
        },
        "QrCheckSessionRequest": {
            "type": "object",
            "properties": { "childJwt": { "type": "string" }, "parentJwt": { "type": "string" } },
            "title": "QrCheckSessionRequest"
        },
        "QrNewSessionResponse": {
            "type": "object",
            "properties": { "childToken": { "type": "string" }, "childUrl": { "type": "string" } },
            "title": "QrNewSessionResponse"
        },
        "RegolaPagamento": {
            "type": "object",
            "properties": {
                "azieRegola": { "type": "string" },
                "brandRegola": { "type": "string" },
                "codAdv": { "type": "string" },
                "codicePagamento": { "type": "string" },
                "dataPartenzaA": { "type": "string" },
                "dataPartenzaDa": { "type": "string" },
                "descrizione": { "type": "string" },
                "destRegola": { "type": "string" },
                "flussoRegola": { "type": "string" },
                "giorniAntepartenzaA": { "type": "integer", "format": "int32" },
                "giorniAntepartenzaDa": { "type": "integer", "format": "int32" },
                "metodiPagamento": { "type": "array", "items": { "type": "string" } },
                "modalitaPagamento": { "type": "string" },
                "ordinale": { "type": "integer", "format": "int32" },
                "ordiniA": { "type": "string" },
                "ordiniDa": { "type": "string" },
                "reteAdv": { "type": "string" },
                "statusPratica": { "type": "string" },
                "tipoImporto": { "type": "string" },
                "tipoTransazione": { "type": "string" },
                "valid": { "type": "boolean" },
                "valoreImporto": { "type": "number", "format": "double" }
            },
            "title": "RegolaPagamento"
        },
        "RegolaPagamentoDTO": {
            "type": "object",
            "properties": {
                "azieRegola": { "type": "string" },
                "brandRegola": { "type": "string" },
                "codAdv": { "type": "string" },
                "codicePagamento": { "type": "string" },
                "dataPartenzaA": { "type": "string" },
                "dataPartenzaDa": { "type": "string" },
                "descrizione": { "type": "string" },
                "destRegola": { "type": "string" },
                "flussoRegola": { "type": "string" },
                "giorniAntepartenzaA": { "type": "integer", "format": "int32" },
                "giorniAntepartenzaDa": { "type": "integer", "format": "int32" },
                "metodiPagamento": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/MetodoPagamentoDTO" }
                },
                "modalitaPagamento": { "type": "string" },
                "ordinale": { "type": "integer", "format": "int32" },
                "ordiniA": { "type": "string" },
                "ordiniDa": { "type": "string" },
                "reteAdv": { "type": "string" },
                "statusPratica": { "type": "string" },
                "tipoImporto": { "type": "string" },
                "tipoTransazione": { "type": "string" },
                "valoreImporto": { "type": "number", "format": "double" }
            },
            "title": "RegolaPagamentoDTO"
        },
        "RegoleRequest": {
            "type": "object",
            "required": ["amount", "channel", "dataPartenza", "flusso", "statoPratica"],
            "properties": {
                "amount": { "type": "integer", "format": "int64" },
                "channel": { "type": "string" },
                "dataPartenza": { "type": "string" },
                "flusso": { "type": "string" },
                "statoPratica": { "type": "string" }
            },
            "title": "RegoleRequest"
        },
        "SendQrCodeUrlRequest": {
            "type": "object",
            "properties": { "qrCodeUrl": { "type": "string" }, "to": { "type": "string" } },
            "title": "SendQrCodeUrlRequest"
        },
        "Session": {
            "type": "object",
            "properties": {
                "acceptedTermsAndConditions": { "type": "boolean" },
                "acquirer": { "type": "string" },
                "authCode": { "type": "string" },
                "blockRedirect": { "type": "boolean" },
                "callBackUrl": { "type": "string" },
                "cancelUrl": { "type": "string" },
                "canceled": { "type": "boolean" },
                "canceledTimestamp": { "type": "string", "format": "date-time" },
                "channel": { "type": "string" },
                "circuito": { "type": "string" },
                "dataPartenza": { "type": "string" },
                "dateAcceptedTermsAndConditions": { "type": "string" },
                "defaultLanguage": { "type": "string" },
                "description": { "type": "string" },
                "entryBlocked": { "type": "boolean" },
                "error": { "type": "string" },
                "esito": { "type": "string" },
                "esitoAntifrode": { "type": "string" },
                "externalRule": { "type": "boolean" },
                "failureUrl": { "type": "string" },
                "flusso": { "type": "string" },
                "formattedInitializationTimestamp": { "type": "string" },
                "gatewayInitialized": { "type": "boolean" },
                "gatewayInitializedTimestamp": { "type": "string", "format": "date-time" },
                "gatewayPaymentUrl": { "type": "string" },
                "igfsCode": { "type": "string" },
                "infoAggiuntive": { "$ref": "#/definitions/InfoDTO" },
                "initializationTimestamp": { "type": "string", "format": "date-time" },
                "initialized": { "type": "boolean" },
                "ipUtente": { "type": "string" },
                "jwtId": { "type": "string" },
                "mailUtente": { "type": "string" },
                "merchantId": { "type": "string" },
                "merchantTransactionId": { "type": "string" },
                "metodoScelto": { "type": "string" },
                "modalitaPagamento": { "type": "string" },
                "mode": { "type": "string", "enum": ["AUTO", "METODI", "PAY_BY_LINK", "PROXY"] },
                "operazione": { "type": "string" },
                "orderUpdateAlreadyDone": { "type": "boolean" },
                "pagamentoSelezionato": { "type": "string" },
                "panConto": { "type": "string" },
                "passenger": { "$ref": "#/definitions/Passenger" },
                "paymentId": { "type": "string" },
                "paymentNotifyAlreadySent": { "type": "boolean" },
                "paymentRequest": { "$ref": "#/definitions/PaymentRequest" },
                "paymentTokenOutput": { "type": "string" },
                "pflRef": { "type": "string" },
                "qrChildId": { "type": "string" },
                "qrChildJwt": { "type": "string" },
                "qrParentLoading": { "type": "boolean" },
                "regolaScelta": { "type": "string" },
                "result": { "$ref": "#/definitions/PaymentResult" },
                "sessionTimeLimit": { "type": "integer", "format": "int64" },
                "started": { "type": "boolean" },
                "startingTimestamp": { "type": "string", "format": "date-time" },
                "statoPratica": { "type": "string" },
                "statoTransazione": { "type": "string" },
                "strumentoDiPagamento": { "type": "string" },
                "successUrl": { "type": "string" },
                "terminalId": { "type": "string" },
                "terminated": { "type": "boolean" },
                "terminatedTimestamp": { "type": "string", "format": "date-time" },
                "thankYouBehavior": { "type": "string" },
                "tipoTransazione": { "type": "string" },
                "tipoVendita": { "type": "string" },
                "titolare": { "type": "string" },
                "totalAmount": { "type": "number", "format": "double" },
                "tpax": { "type": "string" },
                "trType": { "type": "string" },
                "transactionDate": { "type": "string" },
                "transactionId": { "type": "string" },
                "ultimaFaseGestita": { "type": "string" },
                "userCancel": { "type": "boolean" }
            },
            "title": "Session"
        },
        "SessionDTO": {
            "type": "object",
            "properties": {
                "callBackUrl": { "type": "string" },
                "cancelUrl": { "type": "string" },
                "canceled": { "type": "boolean" },
                "canceledTimestamp": { "type": "string", "format": "date-time" },
                "channel": { "type": "string" },
                "dataPartenza": { "type": "string" },
                "description": { "type": "string" },
                "failureUrl": { "type": "string" },
                "flusso": { "type": "string" },
                "gatewayInitialized": { "type": "boolean" },
                "gatewayInitializedTimestamp": { "type": "string", "format": "date-time" },
                "gatewayPaymentUrl": { "type": "string" },
                "initializationTimestamp": { "type": "string", "format": "date-time" },
                "initialized": { "type": "boolean" },
                "jwtId": { "type": "string" },
                "metodoScelto": { "type": "string" },
                "mode": { "type": "string", "enum": ["AUTO", "METODI", "PAY_BY_LINK", "PROXY"] },
                "pagamentoSelezionato": { "type": "string" },
                "paymentId": { "type": "string" },
                "paymentRequest": { "$ref": "#/definitions/PaymentRequestDTO" },
                "regolaScelta": { "type": "string" },
                "result": { "$ref": "#/definitions/PaymentResultDTO" },
                "started": { "type": "boolean" },
                "startingTimestamp": { "type": "string", "format": "date-time" },
                "statoPratica": { "type": "string" },
                "statusCode": { "type": "string" },
                "successUrl": { "type": "string" },
                "terminated": { "type": "boolean" },
                "terminatedTimestamp": { "type": "string", "format": "date-time" },
                "tipoVendita": { "type": "string" },
                "totalAmount": { "type": "number", "format": "double" },
                "trType": { "type": "string" },
                "transactionId": { "type": "string" }
            },
            "title": "SessionDTO"
        },
        "SessionInitRequest": {
            "type": "object",
            "required": [
                "cancelUrl",
                "channel",
                "dataPartenza",
                "description",
                "failureUrl",
                "flusso",
                "payload",
                "sessionTimeLimit",
                "statoPratica",
                "successUrl"
            ],
            "properties": {
                "callBackUrl": { "type": "string" },
                "cancelUrl": { "type": "string" },
                "channel": { "type": "string" },
                "customPreferences": { "$ref": "#/definitions/CustomPreferences" },
                "dataPartenza": { "type": "string" },
                "description": { "type": "string" },
                "failureUrl": { "type": "string" },
                "flusso": { "type": "string" },
                "modalitaPagamento": { "type": "string" },
                "passenger": { "$ref": "#/definitions/Passenger" },
                "payload": { "$ref": "#/definitions/PaymentRequestDTO" },
                "pflRefData": { "type": "string" },
                "sessionTimeLimit": { "type": "integer", "format": "int64" },
                "statoPratica": { "type": "string" },
                "successUrl": { "type": "string" },
                "uniqueMethod": { "$ref": "#/definitions/UniqueMethodDTO" }
            },
            "title": "SessionInitRequest"
        },
        "SessionInitResponse": {
            "type": "object",
            "properties": {
                "channel": { "type": "string" },
                "errorUrl": { "type": "string" },
                "frontendUrl": { "type": "string" },
                "jwt": { "type": "string" },
                "message": { "type": "string" },
                "regole": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/RegolaPagamentoDTO" }
                },
                "statusCode": { "type": "string" }
            },
            "title": "SessionInitResponse"
        },
        "SessionVerifyRequest": {
            "type": "object",
            "required": ["jwt"],
            "properties": { "jwt": { "type": "string" } },
            "title": "SessionVerifyRequest"
        },
        "SessionVerifyResponse": {
            "type": "object",
            "properties": {
                "agencyName": { "type": "string" },
                "amount": { "type": "number", "format": "double" },
                "brandIsDark": { "type": "boolean" },
                "channel": { "type": "string" },
                "channelColor": { "type": "string" },
                "channelImg": { "type": "string" },
                "channelInfo": { "$ref": "#/definitions/CanaleInfoDTO" },
                "channelLegalInfo": { "$ref": "#/definitions/ChannelLegalInfo" },
                "channelName": { "type": "string" },
                "channelStyle": { "$ref": "#/definitions/ChannelStyle" },
                "customPreferences": { "$ref": "#/definitions/CustomPreferencesDTO" },
                "dataPartenza": { "type": "string" },
                "description": { "type": "string" },
                "email": { "type": "string" },
                "message": { "type": "string" },
                "modalitaPagamento": { "type": "string" },
                "nomeGruppo": { "type": "string" },
                "orderNumber": { "type": "string" },
                "passenger": { "$ref": "#/definitions/Passenger" },
                "paymentMethodLimits": { "$ref": "#/definitions/PaymentMethodLimits" },
                "phoneNumber": { "type": "string" },
                "regole": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/RegolaPagamentoDTO" }
                },
                "sessionExpired": { "type": "boolean" },
                "specialEvent": { "type": "string" },
                "statusCode": { "type": "string" },
                "terminated": { "type": "boolean" },
                "tpax": { "type": "string" },
                "userCancel": { "type": "boolean" }
            },
            "title": "SessionVerifyResponse"
        },
        "SingleChannelRequestDto": {
            "type": "object",
            "properties": {
                "canalePagamento": { "$ref": "#/definitions/CanalePagamento" },
                "jwt": { "type": "string" }
            },
            "title": "SingleChannelRequestDto"
        },
        "UniqueMethodDTO": {
            "type": "object",
            "properties": {
                "metodoScelto": { "type": "string" },
                "regolaScelta": { "type": "string" }
            },
            "title": "UniqueMethodDTO"
        },
        "UserDesk": {
            "type": "object",
            "properties": {
                "accountNonExpired": { "type": "string" },
                "accountNonLocked": { "type": "string" },
                "credentialsNonExpired": { "type": "string" },
                "email": { "type": "string" },
                "enabled": { "type": "string" },
                "memberOf": { "type": "string" },
                "name": { "type": "string" },
                "password": { "type": "string" },
                "role": { "type": "string" },
                "surname": { "type": "string" },
                "username": { "type": "string" }
            },
            "title": "UserDesk"
        },
        "VerifyOtpRequestDto": {
            "type": "object",
            "properties": { "otpData": { "type": "string" }, "refData": { "type": "string" } },
            "title": "VerifyOtpRequestDto"
        }
    }
}
